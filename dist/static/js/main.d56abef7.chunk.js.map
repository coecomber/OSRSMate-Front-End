{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/posts/PostSummary.js","components/posts/PostList.js","components/dashboard/Dashboard.js","components/posts/PostDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/posts/CreatePost.js","store/actions/postActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","isLoaded","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","PostSummary","post","title","authorFirstName","authorLastName","createdAt","calendar","PostList","posts","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","doc","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","firstName","lastName","signUp","minLength","newUser","getFirestore","createUserWithEmailAndPassword","respons","set","CreatePost","createPost","history","push","authorId","add","Date","App","exact","path","component","PostDetails","SignUp","Boolean","window","location","hostname","initState","authReducer","action","message","postReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d56abef7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/createpost'>New Post</NavLink></li>\r\n                <li><a href=\"/\" onClick={props.signOut}>Log Out</a></li>\r\n                <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{ props.profile.initials }</NavLink></li>\r\n            </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((respons) => {\r\n            return firestore.collection('users').doc(respons.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/signup'>Signup</NavLink></li>\r\n                <li><NavLink to='/signin'>Login</NavLink></li>\r\n            </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={ profile } /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-4\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"OSRSMate logo\">OSRSMate</Link>\r\n                {auth.isLoaded && links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(notification => {\r\n                            return(\r\n                                <div key={ notification.id }>\r\n                                    <li>\r\n                                        <span className=\"pink-text\">{ notification.user } </span>\r\n                                        <span>{ notification.content }</span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            {moment(notification.time.toDate()).fromNow()}\r\n                                        </div>\r\n                                    </li>\r\n                                    <hr />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst PostSummary = ({post}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 post-summary\"> \r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{post.title}</span>\r\n                <p>Posted by { post.authorFirstName } { post.authorLastName }</p>\r\n                <p className=\"grey-text\">{moment(post.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostSummary","import React from 'react'\r\nimport PostSummary from './PostSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PostList = ({posts}) => {\r\n    return(\r\n        <div className=\"post-list section\">\r\n            { posts && posts.map(post => {\r\n                return (\r\n                    <Link to={'/post/' + post.id} key={post.id}>\r\n                    <PostSummary post={post} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport PostList from '../posts/PostList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const { posts, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return(\r\n            <div className=\"Dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <PostList posts={ posts }/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={ notifications }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        posts: state.firestore.ordered.posts,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'posts', limit: 10, orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 8, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst PostDetails = (props) => {\r\n    const { post, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    if (post){\r\n        return (\r\n        <div className=\"container section post-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{ post.title }</span>\r\n                    <p>{ post.content }</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by { post.authorFirstName } { post.authorLastName }</div>\r\n                    <div>{moment(post.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading post...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const posts = state.firestore.data.posts;\r\n    const post = posts ? posts[id] : null\r\n    return {\r\n        post: post,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect(props => [\r\n        { collection: 'posts', doc:props.match.params.id }\r\n    ])\r\n)(PostDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"White\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"White\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create a new account</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" minLength=\"1\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" minLength=\"1\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create account</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p> { authError } </p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createPost } from '../../store/actions/postActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreatePost extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createPost(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"White\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create a new post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Post Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create Post</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => dispatch(createPost(post))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost)","export const createPost = (post) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // Make async call to backend\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('posts').add({\r\n            ...post,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_POST', post})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n    }\r\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport PostDetails from './components/posts/PostDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreatePost from './components/posts/CreatePost'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/post/:id' component={PostDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/createpost' component={CreatePost} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Signout of user succesfull');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    posts: [\r\n        {id: '1', title: 'This is the thirth post on this website :)', content: 'blah blah blah'},\r\n        {id: '2', title: 'Wooh second post', content: 'blah blah blah'},\r\n        {id: '3', title: 'First post!', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst postReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_POST':\r\n            console.log('Created new post', action.post);\r\n            return state;\r\n        case 'CREATE_POST_ERROR':\r\n            console.log('CREATE_POST_ERROR ', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer","import authReducer from './authReducer'\r\nimport postReducer from './postReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    post: postReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDORjt_mUcPZPyi0FHaeoERr1VzA8zQVnA\",\r\n    authDomain: \"osrsmate-15e30.firebaseapp.com\",\r\n    databaseURL: \"https://osrsmate-15e30.firebaseio.com\",\r\n    projectId: \"osrsmate-15e30\",\r\n    storageBucket: \"osrsmate-15e30.appspot.com\",\r\n    messagingSenderId: \"501351136975\",\r\n    appId: \"1:501351136975:web:edabd369de7962fca001ba\",\r\n    measurementId: \"G-F7J1QPMLK7\"\r\n  };\r\n\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore()\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider, useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n    rootReducer, \n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(firebase, firebaseConfig)\n    )\n  );\n\n  const rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n  }\n\n  const rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    presence: 'presence',\n    sessions: 'sessions'\n  }\n\n  function AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n    return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}