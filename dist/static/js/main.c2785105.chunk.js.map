{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/posts/PostSummary.js","components/posts/PostList.js","components/dashboard/Dashboard.js","components/posts/PostDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/posts/CreatePost.js","store/actions/postActions.js","components/profile/Profile.js","components/highscore/Highscore.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postReducer.js","store/reducers/highscoreReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","style","marginBottom","fontSize","id","isLoaded","Notifications","notifications","map","notification","key","user","content","moment","time","toDate","fromNow","PostSummary","post","title","authorFirstName","authorLastName","createdAt","calendar","PostList","posts","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","doc","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","firstName","lastName","signUp","minLength","newUser","getFirestore","createUserWithEmailAndPassword","respons","set","CreatePost","createPost","history","push","authorId","add","Date","Profile","console","log","Highscore","highscore","name","overallExp","attackExp","defenceExp","strengthExp","hitpointsExp","rangedExp","prayerExp","magicExp","cookingExp","woodcuttingExp","fletchingExp","fishingExp","firemakingExp","craftingExp","smithingExp","miningExp","herbloreExp","agilityExp","thievingExp","slayerExp","farmingExp","runecraftExp","hunterExp","constructionExp","src","alt","bindActionCreators","App","exact","path","component","PostDetails","SignUp","Highscores","Boolean","window","location","hostname","initState","authReducer","action","message","postReducer","highscoreReducer","username","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c2785105.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/createpost'>New Post</NavLink></li>\r\n                <li><NavLink to='/highscores'>Highscores</NavLink></li>\r\n                <li><NavLink to='/questcalc'>Quest Calculator</NavLink></li>\r\n                <li><NavLink to='/profile'>Profile</NavLink></li>\r\n                <li><a href=\"/\" onClick={props.signOut}>Log Out</a></li>\r\n                <li><NavLink to='/profile' className='btn btn-floating pink lighten-1'>{ props.profile.initials }</NavLink></li>\r\n            </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((respons) => {\r\n            return firestore.collection('users').doc(respons.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/signup'>Signup</NavLink></li>\r\n                <li><NavLink to='/signin'>Login</NavLink></li>\r\n            </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={ profile } /> : <SignedOutLinks />\r\n    \r\n    return (\r\n        <div>\r\n            <nav className=\"nav-wrapper grey darken-4\" style={{marginBottom: 0}}>\r\n                <Link to='/' className=\"OSRSMate logo\"><b style={{fontSize: '14px'}}>\t&nbsp; OSRSMate</b></Link>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    {auth.isLoaded && links }\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card grey darken-2\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">Notifications</span>\r\n                        <ul className=\"notifications\">\r\n                            { notifications && notifications.map(notification => {\r\n                                return(\r\n                                    <div key={ notification.id }>\r\n                                        <li>\r\n                                            <span className=\"pink-text\">{ notification.user } </span>\r\n                                            <span>{ notification.content }</span>\r\n                                            <div className=\"grey-text note-date\">\r\n                                                {moment(notification.time.toDate()).fromNow()}\r\n                                            </div>\r\n                                        </li>\r\n                                        <hr />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst PostSummary = ({post}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 post-summary\"> \r\n            <div className=\"card grey darken-2\">\r\n                <div className=\"card-content grey-text text-darken-4\">\r\n                    <span className=\"card-title\">{post.title}</span>\r\n                    <p>Posted by { post.authorFirstName } { post.authorLastName }</p>\r\n                    <p className=\"grey-text\">{moment(post.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostSummary","import React from 'react'\r\nimport PostSummary from './PostSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PostList = ({posts}) => {\r\n    return(\r\n        <div className=\"post-list section\">\r\n            { posts && posts.map(post => {\r\n                return (\r\n                    <Link to={'/post/' + post.id} key={post.id}>\r\n                    <PostSummary post={post} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport PostList from '../posts/PostList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const { posts, notifications } = this.props;\r\n\r\n        return(\r\n            <div className=\"Dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <PostList posts={ posts }/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={ notifications }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n        posts: state.firestore.ordered.posts,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'posts', limit: 4, orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 8, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst PostDetails = (props) => {\r\n    const { post, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    if (post){\r\n        return (\r\n        <div className=\"container section post-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card grey darken-2\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ post.title }</span>\r\n                        <p>{ post.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action grey darken-1 grey-text\">\r\n                        <div>Posted by { post.authorFirstName } { post.authorLastName }</div>\r\n                        <div>{moment(post.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading post...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const posts = state.firestore.data.posts;\r\n    const post = posts ? posts[id] : null\r\n    return {\r\n        post: post,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect(props => [\r\n        { collection: 'posts', doc:props.match.params.id }\r\n    ])\r\n)(PostDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"White\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"White\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create a new account</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" minLength=\"1\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" minLength=\"1\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create account</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p> { authError } </p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createPost } from '../../store/actions/postActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreatePost extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createPost(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"White\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create a new post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Post Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create Post</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => dispatch(createPost(post))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost)","export const createPost = (post) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // Make async call to backend\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('posts').add({\r\n            ...post,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_POST', post})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Profile extends Component {\r\n    render(){\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        console.log(auth);\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <h5 className=\"grey-text text-darken-3\">Profile</h5>\r\n                <p>Mail: {auth.email}</p>\r\n                <br /><br />\r\n\r\n                <h5>Characters</h5>\r\n                <h6>My connected characters</h6>\r\n                <p>None yet</p>\r\n\r\n                <br /><br />\r\n                <h5>Connect new character</h5>\r\n                <div className=\"input-field\">\r\n                        <label htmlFor=\"Username\">Username</label>\r\n                        <input type=\"text\" id=\"Username\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Add new Character</button>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile)","import React, { Component } from 'react'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Highscore extends Component {\r\n    render() {\r\n        const { highscore } = this.props.state;\r\n\r\n        console.log(highscore)\r\n\r\n        return (\r\n            <div className=\"Highscore container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row grey-text\">\r\n                    <div className=\"col s12 m7 grey darken-2 grey-text text-darken-4\">\r\n\r\n                        <h5>Stats for <b>{highscore.name}</b></h5>\r\n\r\n                        <br /><br />\r\n\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Skill</th>\r\n                                    <th>Level</th>\r\n                                    <th>Experience</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Overall</td>\r\n                                    <td>2,185</td>\r\n                                    <td>{ highscore.overallExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Attack</td>\r\n                                    <td>99</td>\r\n                                    <td>{ highscore.attackExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Defence</td>\r\n                                    <td>90</td>\r\n                                    <td>{ highscore.defenceExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Strength</td>\r\n                                    <td>99</td>\r\n                                    <td>{ highscore.strengthExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Hitpoints</td>\r\n                                    <td>102</td>\r\n                                    <td>{ highscore.hitpointsExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Ranged</td>\r\n                                    <td>104</td>\r\n                                    <td>{ highscore.rangedExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Prayer</td>\r\n                                    <td>86</td>\r\n                                    <td>{ highscore.prayerExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Magic</td>\r\n                                    <td>98</td>\r\n                                    <td>{ highscore.magicExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Cooking</td>\r\n                                    <td>99</td>\r\n                                    <td>{ highscore.cookingExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Woodcutting</td>\r\n                                    <td>99</td>\r\n                                    <td>{ highscore.woodcuttingExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Fletching</td>\r\n                                    <td>98</td>\r\n                                    <td>{ highscore.fletchingExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Fishing</td>\r\n                                    <td>99</td>\r\n                                    <td>{ highscore.fishingExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Firemaking</td>\r\n                                    <td>99</td>\r\n                                    <td>{ highscore.firemakingExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Crafting</td>\r\n                                    <td>92</td>\r\n                                    <td>{ highscore.craftingExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Smithing</td>\r\n                                    <td>88</td>\r\n                                    <td>{ highscore.smithingExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Mining</td>\r\n                                    <td>94</td>\r\n                                    <td>{ highscore.miningExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Herblore</td>\r\n                                    <td>91</td>\r\n                                    <td>{ highscore.herbloreExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Agility</td>\r\n                                    <td>86</td>\r\n                                    <td>{ highscore.agilityExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Thieving</td>\r\n                                    <td>99</td>\r\n                                    <td>{ highscore.thievingExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Slayer</td>\r\n                                    <td>97</td>\r\n                                    <td>{ highscore.slayerExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Farming</td>\r\n                                    <td>93</td>\r\n                                    <td>{ highscore.farmingExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Runecrafting</td>\r\n                                    <td>87</td>\r\n                                    <td>{ highscore.runecraftExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Hunter</td>\r\n                                    <td>99</td>\r\n                                    <td>{ highscore.hunterExp }</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Construction</td>\r\n                                    <td>87</td>\r\n                                    <td>{ highscore.constructionExp }</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <br /><br />\r\n\r\n                        <img src=\"https://i.gyazo.com/11687966fd51c519443b16910c0eafeb.png\" alt=\"Highscores Graph\" />\r\n\r\n                    </div>\r\n                    <div className=\"col s12 m4 offset-m1 grey darken-2 grey-text text-darken-4\">\r\n                        <p>The highscores will be updated at least once an hour. If you want your character to show up in the list please <a href=\"/profile\">Connect your character to your OSRSMate account.</a></p>\r\n                        <p>The registered characters are:</p>\r\n                        <ul>\r\n                            <li><i>Grey Sheep</i></li>\r\n                            <li><i>Azure Sheep</i></li>\r\n                            <li><i>Alpaca Sheep</i></li>\r\n                            <li><i>Green Sheep</i></li>\r\n                            <li><i>Grondwortel</i></li>\r\n                            <li><i>Connectie</i></li>\r\n                            <li><i>Ruljo026</i></li>\r\n                        </ul>\r\n\r\n                        <br />\r\n                        <p>This page and website uses multiple data sources. The backend made by the OSRSMate team (Joost van Herwaarden) can be found on the following page: <a href=\"http://217.101.44.31:8090/swagger-ui.html\">http://217.101.44.31:8090/swagger-ui.html</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state.highscore);\r\n    return {\r\n        state: state.highscore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Highscore);","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport PostDetails from './components/posts/PostDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreatePost from './components/posts/CreatePost'\nimport Profile from './components/profile/Profile'\nimport Highscores from './components/highscore/Highscore'\n// import { Jumbotron } from './components/Jumbotron/GlobalJumbotron'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        {/* <Jumbotron /> */}\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/post/:id' component={PostDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/profile' component={Profile} />\n          <Route path='/createpost' component={CreatePost} />\n          <Route path='/highscores' component={Highscores} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Signout of user succesfull');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    posts: [\r\n        {id: '1', title: 'Loading...', content: 'We are still loading the posts for you!'}\r\n    ]\r\n}\r\n\r\nconst postReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_POST':\r\n            console.log('Created new post', action.post);\r\n            return state;\r\n        case 'CREATE_POST_ERROR':\r\n            console.log('CREATE_POST_ERROR ', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer","const initState = {\r\n    highscore: \r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Grey Sheep\",\r\n            \"overallExp\": 237635060,\r\n            \"attackExp\": 13035716,\r\n            \"defenceExp\": 5877111,\r\n            \"strengthExp\": 13446153,\r\n            \"hitpointsExp\": 19330848,\r\n            \"rangedExp\": 22064057,\r\n            \"prayerExp\": 3648476,\r\n            \"magicExp\": 12509310,\r\n            \"cookingExp\": 13064268,\r\n            \"woodcuttingExp\": 13041743,\r\n            \"fletchingExp\": 12608059,\r\n            \"fishingExp\": 13035928,\r\n            \"firemakingExp\": 13049104,\r\n            \"craftingExp\": 6639004,\r\n            \"smithingExp\": 4645807,\r\n            \"miningExp\": 8025322,\r\n            \"herbloreExp\": 6369594,\r\n            \"agilityExp\": 3922024,\r\n            \"thievingExp\": 13114548,\r\n            \"slayerExp\": 11152752,\r\n            \"farmingExp\": 7849842,\r\n            \"runecraftExp\": 4187380,\r\n            \"hunterExp\": 13041563,\r\n            \"constructionExp\": 3976451\r\n          }\r\n    \r\n}\r\n\r\nconst highscoreReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_HIGHSCORE':\r\n            console.log('Got all highscores for following user: ', action.username)\r\n            return state;\r\n        case 'GET_HIGHSCORE_ERROR':\r\n            console.log('Trying to get all highscores failed for the following user: ', action.username)\r\n            return state;\r\n        case 'ADD_HIGHSCORE':\r\n            console.log('Added new highscore', action.post);\r\n            return state;\r\n        case 'ADD_HIGHSCORE_ERROR':\r\n            console.log('ADD_HIGHSCORE_ERROR ', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default highscoreReducer\r\n\r\n\r\n\r\n\r\n// import {FETCH_HIGHSCORES_PENDING, FETCH_HIGHSCORES_SUCCESS, FETCH_HIGHSCORES_ERROR} from '../actions/highscoreActions'\r\n\r\n// const initialState = {\r\n//     pending: false,\r\n//     highscores: [],\r\n//     error: null\r\n// }\r\n\r\n// export function highscoreReducer(state = initialState, action) {\r\n//     switch(action.type){\r\n//         case FETCH_HIGHSCORES_PENDING:\r\n//             console.log('FETCH_HIGHSCORES_PENDING')\r\n//             return {\r\n//                 ...state,\r\n//                 pending: true\r\n//             }\r\n//         case FETCH_HIGHSCORES_SUCCESS:\r\n//             console.log('FETCH_HIGHSCORES_SUCCESS')\r\n//             return {\r\n//                 ...state,\r\n//                 pending: false,\r\n//                 highscores: action.highscores\r\n//             }\r\n//         case FETCH_HIGHSCORES_ERROR:\r\n//             console.log('FETCH_HIGHSCORES_ERROR ', action.err)\r\n//             return {\r\n//                 ...state,\r\n//                 pending: false,\r\n//                 error: action.err,\r\n//             }\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n// export const getHighscores = state => {\r\n//     console.log(state.highscores)\r\n// }\r\n// export const getHighscoresPending = state => state.pending;\r\n// export const getHighscoresError = state => state.error;","import authReducer from './authReducer'\r\nimport postReducer from './postReducer'\r\nimport highscoreReducer from './highscoreReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    post: postReducer,\r\n    highscore: highscoreReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer    \r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDORjt_mUcPZPyi0FHaeoERr1VzA8zQVnA\",\r\n    authDomain: \"osrsmate-15e30.firebaseapp.com\",\r\n    databaseURL: \"https://osrsmate-15e30.firebaseio.com\",\r\n    projectId: \"osrsmate-15e30\",\r\n    storageBucket: \"osrsmate-15e30.appspot.com\",\r\n    messagingSenderId: \"501351136975\",\r\n    appId: \"1:501351136975:web:edabd369de7962fca001ba\",\r\n    measurementId: \"G-F7J1QPMLK7\"\r\n  };\r\n\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore()\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider, useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n    rootReducer, \n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(firebase, firebaseConfig)\n    )\n  );\n\n  const rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n  }\n\n  const rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    presence: 'presence',\n    sessions: 'sessions'\n  }\n\n  function AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n    return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}