{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/posts/PostSummary.js","components/posts/PostList.js","components/dashboard/Dashboard.js","components/posts/PostDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/posts/CreatePost.js","store/actions/postActions.js","components/profile/Profile.js","components/highscore/Highscore.js","store/actions/highscoreActions.js","components/QuestCalc/QuestCalc.js","components/AchievementCalc/AchievementCalc.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postReducer.js","store/reducers/highscoreReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","style","marginBottom","fontSize","id","isLoaded","Notifications","notifications","map","notification","key","user","content","moment","time","toDate","fromNow","PostSummary","post","title","authorFirstName","authorLastName","createdAt","calendar","PostList","posts","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","doc","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","firstName","lastName","signUp","minLength","newUser","getFirestore","createUserWithEmailAndPassword","respons","set","CreatePost","createPost","history","push","authorId","add","Date","Profile","console","log","Highscore","getHighscoresByUsername","highscore","name","overallExp","attackExp","defenceExp","strengthExp","hitpointsExp","rangedExp","prayerExp","magicExp","cookingExp","woodcuttingExp","fletchingExp","fishingExp","firemakingExp","craftingExp","smithingExp","miningExp","herbloreExp","agilityExp","thievingExp","slayerExp","farmingExp","runecraftExp","hunterExp","constructionExp","src","alt","highscores","username","fetch","response","json","error","QuestCalc","color","class","questcalc","bindActionCreators","AchievementCalc","App","exact","path","component","PostDetails","SignUp","Highscores","Boolean","window","location","hostname","initState","authReducer","action","message","postReducer","highscoreReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9ff1f1a.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return (\n            <ul className=\"right\">\n                <li><NavLink to='/'>Home</NavLink></li>\n                <li><NavLink to='/createpost'>New Post</NavLink></li>\n                <li><NavLink to='/highscores'>Highscores</NavLink></li>\n                <li><NavLink to='/questcalc'>Quest Calculator</NavLink></li>\n                <li><NavLink to='/achievementcalc'>Achievement Calculator</NavLink></li>\n                <li><NavLink to='/profile'>Profile</NavLink></li>\n                <li><a href=\"/\" onClick={props.signOut}>Log Out</a></li>\n                <li><NavLink to='/profile' className='btn btn-floating pink lighten-1'>{ props.profile.initials }</NavLink></li>\n            </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err })\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((respons) => {\n            return firestore.collection('users').doc(respons.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n            <ul className=\"right\">\n                <li><NavLink to='/'>Home</NavLink></li>\n                <li><NavLink to='/signup'>Signup</NavLink></li>\n                <li><NavLink to='/signin'>Login</NavLink></li>\n            </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={ profile } /> : <SignedOutLinks />\n    \n    return (\n        <div>\n            <nav className=\"nav-wrapper grey darken-4\" style={{marginBottom: 0}}>\n                <Link to='/' className=\"OSRSMate logo\"><b style={{fontSize: '14px'}}>\t&nbsp; OSRSMate</b></Link>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    {auth.isLoaded && links }\n                </ul>\n            </nav>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n} \n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const { notifications } = props\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card grey darken-2\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">Notifications</span>\n                        <ul className=\"notifications\">\n                            { notifications && notifications.map(notification => {\n                                return(\n                                    <div key={ notification.id }>\n                                        <li>\n                                            <span className=\"pink-text\">{ notification.user } </span>\n                                            <span>{ notification.content }</span>\n                                            <div className=\"grey-text note-date\">\n                                                {moment(notification.time.toDate()).fromNow()}\n                                            </div>\n                                        </li>\n                                        <hr />\n                                    </div>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst PostSummary = ({post}) => {\n    return(\n        <div className=\"card z-depth-0 post-summary\"> \n            <div className=\"card grey darken-2\">\n                <div className=\"card-content grey-text text-darken-4\">\n                    <span className=\"card-title\">{post.title}</span>\n                    <p>Posted by { post.authorFirstName } { post.authorLastName }</p>\n                    <p className=\"grey-text\">{moment(post.createdAt.toDate()).calendar()}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PostSummary","import React from 'react'\nimport PostSummary from './PostSummary'\nimport { Link } from 'react-router-dom'\n\nconst PostList = ({posts}) => {\n    return(\n        <div className=\"post-list section\">\n            { posts && posts.map(post => {\n                return (\n                    <Link to={'/post/' + post.id} key={post.id}>\n                    <PostSummary post={post} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default PostList","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport PostList from '../posts/PostList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nclass Dashboard extends Component {\n    render(){\n        const { posts, notifications } = this.props;\n\n        return(\n            <div className=\"Dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <PostList posts={ posts }/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={ notifications }/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    //console.log(state);\n    return {\n        posts: state.firestore.ordered.posts,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'posts', limit: 4, orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 8, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst PostDetails = (props) => {\n    const { post, auth } = props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n\n    if (post){\n        return (\n        <div className=\"container section post-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card grey darken-2\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{ post.title }</span>\n                        <p>{ post.content }</p>\n                    </div>\n                    <div className=\"card-action grey darken-1 grey-text\">\n                        <div>Posted by { post.authorFirstName } { post.authorLastName }</div>\n                        <div>{moment(post.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    } else{\n        return (\n            <div className=\"container center\">\n                <p>Loading post...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    //console.log(state);\n    const id = ownProps.match.params.id;\n    const posts = state.firestore.data.posts;\n    const post = posts ? posts[id] : null\n    return {\n        post: post,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(props => [\n        { collection: 'posts', doc:props.match.params.id }\n    ])\n)(PostDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"White\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"White\">\n                    <h5 className=\"grey-text text-darken-3\">Create a new account</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" minLength=\"1\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" minLength=\"1\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create account</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p> { authError } </p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createPost } from '../../store/actions/postActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreatePost extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.createPost(this.state)\n        this.props.history.push('/');\n    }\n    render() {\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />\n\n        return (\n            <div className=\"container grey darken-2 grey-text text-darken-4\">\n                <form onSubmit={this.handleSubmit} className=\"White\">\n                    <h5>Create a new post</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Post Content</label>\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create Post</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createPost: (post) => dispatch(createPost(post))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost)","export const createPost = (post) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // Make async call to backend\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('posts').add({\n            ...post,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_POST', post})\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        })\n    }\n};","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Profile extends Component {\n    render(){\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />\n\n        console.log(auth);\n\n        return(\n            <div className=\"container grey darken-2 grey-text text-darken-4\">\n                <h5>Profile</h5>\n                <p>Mail: {auth.email}</p>\n                <br /><br />\n\n                <h5>Characters</h5>\n                <h6>My connected characters</h6>\n                <p>None yet</p>\n\n                <br /><br />\n                <h5>Connect new character</h5>\n                <div className=\"input-field\">\n                        <label htmlFor=\"Username\">Username</label>\n                        <input type=\"text\" id=\"Username\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Add new Character</button>\n                    </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Profile)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getHighscoresByUsername } from '../../store/actions/highscoreActions'\n\nclass Highscore extends Component {\n\n    componentDidMount(){\n        this.props.getHighscoresByUsername('grey')\n    }\n\n    render() {\n        const { highscore } = this.props.state;\n\n        console.log(highscore)\n\n        return (\n            <div className=\"Highscore container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                    </div>\n                </div>\n                <div className=\"row grey-text\">\n                    <div className=\"col s12 m7 grey darken-2 grey-text text-darken-4\">\n\n                        <h5>Stats for <b>{highscore.name}</b></h5>\n\n                        <br /><br />\n\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Skill</th>\n                                    <th>Level</th>\n                                    <th>Experience</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr>\n                                    <td>Overall</td>\n                                    <td>2,185</td>\n                                    <td>{ highscore.overallExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Attack</td>\n                                    <td>99</td>\n                                    <td>{ highscore.attackExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Defence</td>\n                                    <td>90</td>\n                                    <td>{ highscore.defenceExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Strength</td>\n                                    <td>99</td>\n                                    <td>{ highscore.strengthExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Hitpoints</td>\n                                    <td>102</td>\n                                    <td>{ highscore.hitpointsExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Ranged</td>\n                                    <td>104</td>\n                                    <td>{ highscore.rangedExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Prayer</td>\n                                    <td>86</td>\n                                    <td>{ highscore.prayerExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Magic</td>\n                                    <td>98</td>\n                                    <td>{ highscore.magicExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Cooking</td>\n                                    <td>99</td>\n                                    <td>{ highscore.cookingExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Woodcutting</td>\n                                    <td>99</td>\n                                    <td>{ highscore.woodcuttingExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Fletching</td>\n                                    <td>98</td>\n                                    <td>{ highscore.fletchingExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Fishing</td>\n                                    <td>99</td>\n                                    <td>{ highscore.fishingExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Firemaking</td>\n                                    <td>99</td>\n                                    <td>{ highscore.firemakingExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Crafting</td>\n                                    <td>92</td>\n                                    <td>{ highscore.craftingExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Smithing</td>\n                                    <td>88</td>\n                                    <td>{ highscore.smithingExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Mining</td>\n                                    <td>94</td>\n                                    <td>{ highscore.miningExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Herblore</td>\n                                    <td>91</td>\n                                    <td>{ highscore.herbloreExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Agility</td>\n                                    <td>86</td>\n                                    <td>{ highscore.agilityExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Thieving</td>\n                                    <td>99</td>\n                                    <td>{ highscore.thievingExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Slayer</td>\n                                    <td>97</td>\n                                    <td>{ highscore.slayerExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Farming</td>\n                                    <td>93</td>\n                                    <td>{ highscore.farmingExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Runecrafting</td>\n                                    <td>87</td>\n                                    <td>{ highscore.runecraftExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Hunter</td>\n                                    <td>99</td>\n                                    <td>{ highscore.hunterExp }</td>\n                                </tr>\n                                <tr>\n                                    <td>Construction</td>\n                                    <td>87</td>\n                                    <td>{ highscore.constructionExp }</td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <br /><br />\n\n                        <img src=\"https://i.gyazo.com/11687966fd51c519443b16910c0eafeb.png\" alt=\"Highscores Graph\" />\n\n                    </div>\n                    <div className=\"col s12 m4 offset-m1 grey darken-2 grey-text text-darken-4\">\n                        <p>The highscores will be updated at least once an hour. If you want your character to show up in the list please <a href=\"/profile\">Connect your character to your OSRSMate account.</a></p>\n                        <p>The registered characters are:</p>\n                        <ul>\n                            <li><i>Grey Sheep</i></li>\n                            <li><i>Azure Sheep</i></li>\n                            <li><i>Alpaca Sheep</i></li>\n                            <li><i>Green Sheep</i></li>\n                            <li><i>Grondwortel</i></li>\n                            <li><i>Connectie</i></li>\n                            <li><i>Ruljo026</i></li>\n                        </ul>\n\n                        <br />\n                        <p>This page and website uses multiple data sources. The backend made by the OSRSMate team (Joost van Herwaarden) can be found on the following page: <a href=\"http://217.101.44.31:8090/swagger-ui.html\">http://217.101.44.31:8090/swagger-ui.html</a></p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    //console.log(state.highscore);\n    return {\n        state: state.highscore\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getHighscoresByUsername: (highscores) => dispatch(getHighscoresByUsername('grey'))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Highscore);","export const getHighscoresByUsername = (username) => {\n    return (dispatch) => {\n        //Gets stats of player \n        console.log('fetch called')\n        fetch('http://217.101.44.31:8090/api/public/highscores/getUserByUsername/' + username)\n        .then(response => response.json())\n        .then(response => {\n            if(response.error) {\n                console.log('highscoresActions>getHighscoresByUsername error')\n                throw (response.error);\n            }\n\n            dispatch({ type: 'GET_HIGHSCORE', response })\n        })\n        \n    }\n}","import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux'\n\nclass QuestCalc extends Component {\n    render() {\n\n        return (\n            <div className=\"Highscore container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                    </div>\n                </div>\n                <div className=\"row grey-text\">\n                    <div className=\"col s12 m7 grey darken-2 grey-text text-darken-4\">\n\n                        <h5>Quest calculator for <b>Grey Sheep</b></h5>\n\n                        <br /><br />\n\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Quest</th>\n                                    <th>Available</th>\n                                    <th>Required Stats</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr>\n                                    <td>Troll Stronghold</td>\n                                    <td style={{color: \"green\"}} > <i class=\"small material-icons\">check_box</i> </td>\n                                    <td>15 Agility</td>\n                                </tr>\n                                <tr>\n                                    <td>Brightright of the Dwarves</td>\n                                    <td style={{color: \"red\"}}> <i class=\"small material-icons\">indeterminate_check_box</i> </td>\n                                    <td>88 Mining<br />\n                                        90 Fishing<br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Song of the Elves</td>\n                                    <td style={{color: \"green\"}} > <i class=\"small material-icons\">check_box</i> </td>\n                                    <td>70 Agility<br />\n                                        70 Construction<br />\n                                        70 Farming<br />\n                                        70 Herblore<br />\n                                        70 Hunter<br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Dragon Slayer II</td>\n                                    <td style={{color: \"green\"}} > <i class=\"small material-icons\">check_box</i> </td>\n                                    <td>75 Magic<br />\n                                        68 Mining<br />\n                                        68 Mining<br />\n                                        50 Construction<br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Darkness Of Hallowvale</td>\n                                    <td style={{color: \"green\"}} > <i class=\"small material-icons\">check_box</i> </td>\n                                    <td>5 Construction<br />\n                                        20 Mining<br />\n                                        22 Thieving<br />\n                                        26 Agility<br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <br /><br />\n\n\n                    </div>\n                    <div className=\"col s12 m4 offset-m1 grey darken-2 grey-text text-darken-4\">\n                        <p>The highscores will be updated at least once an hour. If you want your character to show up in the list please <a href=\"/profile\">Connect your character to your OSRSMate account.</a></p>\n                        <p>The registered characters are:</p>\n                        <ul>\n                            <li><i>Grey Sheep</i></li>\n                            <li><i>Azure Sheep</i></li>\n                            <li><i>Alpaca Sheep</i></li>\n                            <li><i>Green Sheep</i></li>\n                            <li><i>Grondwortel</i></li>\n                            <li><i>Connectie</i></li>\n                            <li><i>Ruljo026</i></li>\n                        </ul>\n\n                        <br />\n                        <p>This page and website uses multiple data sources. The backend made by the OSRSMate team (Joost van Herwaarden) can be found on the following page: <a href=\"http://217.101.44.31:8090/swagger-ui.html\">http://217.101.44.31:8090/swagger-ui.html</a></p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.questcalc\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(QuestCalc);","import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux'\n\n\nclass AchievementCalc extends Component {\n    render() {\n\n        return (\n            <div className=\"AchievementCalc container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                    </div>\n                </div>\n                <div className=\"row grey-text\">\n                    <div className=\"col s12 m7 grey darken-2 grey-text text-darken-4\">\n\n                        <h5>Achievement calculator for <b>Grey Sheep</b></h5>\n\n                        <br /><br />\n\n\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Achievement</th>\n                                    <th>Available</th>\n                                    <th>Required Stats</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr>\n                                    <td>Ardougne <b>Easy</b> Diary</td>\n                                    <td style={{color: \"green\"}} > <i class=\"small material-icons\">check_box</i> </td>\n                                    <td>15 Thieving</td>\n                                </tr>\n                                <tr>\n                                    <td>Ardougne <b>Medium</b> Diary</td>\n                                    <td style={{color: \"green\"}}> <i class=\"small material-icons\">check_box</i> </td>\n                                    <td>38 Thieving<br />\n                                        39 Agility<br />\n                                        38 Strength<br />\n                                        21 Ranged<br />\n                                        31 Farming<br />\n                                        51 Magic<br />\n                                        50 Firemaking<br />\n                                        49 Crafting<br />\n                                        50 Attack<br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Ardougne <b>Hard</b> Diary</td>\n                                    <td style={{color: \"green\"}} > <i class=\"small material-icons\">check_box</i> </td>\n                                    <td>72 Thieving<br />\n                                        39 Agility<br />\n                                        38 Strength<br />\n                                        21 Ranged<br />\n                                        70 Farming<br />\n                                        66 Magic<br />\n                                        50 Firemaking<br />\n                                        49 Crafting<br />\n                                        50 Attack<br />\n                                        59 Hunter<br />\n                                        68 Smithing<br />\n                                        50 Construction<br />\n                                        65 Runecrafting<br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Ardougne <b>Elite</b> Diary</td>\n                                    <td style={{color: \"red\"}} > <i class=\"small material-icons\">indeterminate_check_box</i> </td>\n                                    <td>82 Thieving<br />\n                                        <i class=\"small material-icons\" style={{fontSize: \"15px\", color: \"red\"}}>indeterminate_check_box</i>90 Agility<br />\n                                        38 Strength<br />\n                                        21 Ranged<br />\n                                        85 Farming<br />\n                                        94 Magic<br />\n                                        50 Firemaking<br />\n                                        49 Crafting<br />\n                                        50 Attack<br />\n                                        59 Hunter<br />\n                                        91 Smithing<br />\n                                        50 Construction<br />\n                                        65 Runecrafting<br />\n                                        81 Fishing<br />\n                                        91 Cooking<br />\n                                        69 Fletching<br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <br /><br />\n\n\n                    </div>\n                    <div className=\"col s12 m4 offset-m1 grey darken-2 grey-text text-darken-4\">\n                        <p>The highscores will be updated at least once an hour. If you want your character to show up in the list please <a href=\"/profile\">Connect your character to your OSRSMate account.</a></p>\n                        <p>The registered characters are:</p>\n                        <ul>\n                            <li><i>Grey Sheep</i></li>\n                            <li><i>Azure Sheep</i></li>\n                            <li><i>Alpaca Sheep</i></li>\n                            <li><i>Green Sheep</i></li>\n                            <li><i>Grondwortel</i></li>\n                            <li><i>Connectie</i></li>\n                            <li><i>Ruljo026</i></li>\n                        </ul>\n\n                        <br />\n                        <p>This page and website uses multiple data sources. The backend made by the OSRSMate team (Joost van Herwaarden) can be found on the following page: <a href=\"http://217.101.44.31:8090/swagger-ui.html\">http://217.101.44.31:8090/swagger-ui.html</a></p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.questcalc\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AchievementCalc);","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport PostDetails from './components/posts/PostDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreatePost from './components/posts/CreatePost'\nimport Profile from './components/profile/Profile'\nimport Highscores from './components/highscore/Highscore'\nimport QuestCalc from './components/QuestCalc/QuestCalc'\nimport AchievementCalc from './components/AchievementCalc/AchievementCalc'\n// import { Jumbotron } from './components/Jumbotron/GlobalJumbotron'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        {/* <Jumbotron /> */}\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/post/:id' component={PostDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/profile' component={Profile} />\n          <Route path='/createpost' component={CreatePost} />\n          <Route path='/highscores' component={Highscores} />\n          <Route path='/questcalc' component={QuestCalc} />\n          <Route path='/achievementcalc' component={AchievementCalc} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('Login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('Login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('Signout of user succesfull');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('Signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('Signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer","const initState = {\n    posts: [\n        {id: '1', title: 'Loading...', content: 'We are still loading the posts for you!'}\n    ]\n}\n\nconst postReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_POST':\n            console.log('Created new post', action.post);\n            return state;\n        case 'CREATE_POST_ERROR':\n            console.log('CREATE_POST_ERROR ', action.err)\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default postReducer","const initState = {\n    highscore: \n        {\n            \"id\": 1,\n            \"name\": \"Grey Sheep\",\n            \"overallExp\": 237635060,\n            \"attackExp\": 13035716,\n            \"defenceExp\": 5877111,\n            \"strengthExp\": 13446153,\n            \"hitpointsExp\": 19330848,\n            \"rangedExp\": 22064057,\n            \"prayerExp\": 3648476,\n            \"magicExp\": 12509310,\n            \"cookingExp\": 13064268,\n            \"woodcuttingExp\": 13041743,\n            \"fletchingExp\": 12608059,\n            \"fishingExp\": 13035928,\n            \"firemakingExp\": 13049104,\n            \"craftingExp\": 6639004,\n            \"smithingExp\": 4645807,\n            \"miningExp\": 8025322,\n            \"herbloreExp\": 6369594,\n            \"agilityExp\": 3922024,\n            \"thievingExp\": 13114548,\n            \"slayerExp\": 11152752,\n            \"farmingExp\": 7849842,\n            \"runecraftExp\": 4187380,\n            \"hunterExp\": 13041563,\n            \"constructionExp\": 3976451\n          }\n    \n}\n\nconst highscoreReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'GET_HIGHSCORE':\n            state.highscore = action.response\n            console.log('state before returning is')\n            console.log(state)\n            return {\n                ...state\n            }\n        case 'GET_HIGHSCORE_ERROR':\n            console.log('Trying to get all highscores failed for the following user: ', action.username)\n            return state;\n        case 'ADD_HIGHSCORE':\n            console.log('Added new highscore', action.post);\n            return state;\n        case 'ADD_HIGHSCORE_ERROR':\n            console.log('ADD_HIGHSCORE_ERROR ', action.err)\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default highscoreReducer\n\n\n\n\n// import {FETCH_HIGHSCORES_PENDING, FETCH_HIGHSCORES_SUCCESS, FETCH_HIGHSCORES_ERROR} from '../actions/highscoreActions'\n\n// const initialState = {\n//     pending: false,\n//     highscores: [],\n//     error: null\n// }\n\n// export function highscoreReducer(state = initialState, action) {\n//     switch(action.type){\n//         case FETCH_HIGHSCORES_PENDING:\n//             console.log('FETCH_HIGHSCORES_PENDING')\n//             return {\n//                 ...state,\n//                 pending: true\n//             }\n//         case FETCH_HIGHSCORES_SUCCESS:\n//             console.log('FETCH_HIGHSCORES_SUCCESS')\n//             return {\n//                 ...state,\n//                 pending: false,\n//                 highscores: action.highscores\n//             }\n//         case FETCH_HIGHSCORES_ERROR:\n//             console.log('FETCH_HIGHSCORES_ERROR ', action.err)\n//             return {\n//                 ...state,\n//                 pending: false,\n//                 error: action.err,\n//             }\n//         default:\n//             return state\n//     }\n// }\n\n// export const getHighscores = state => {\n//     console.log(state.highscores)\n// }\n// export const getHighscoresPending = state => state.pending;\n// export const getHighscoresError = state => state.error;","import authReducer from './authReducer'\nimport postReducer from './postReducer'\nimport highscoreReducer from './highscoreReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    post: postReducer,\n    highscore: highscoreReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer    \n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDORjt_mUcPZPyi0FHaeoERr1VzA8zQVnA\",\n    authDomain: \"osrsmate-15e30.firebaseapp.com\",\n    databaseURL: \"https://osrsmate-15e30.firebaseio.com\",\n    projectId: \"osrsmate-15e30\",\n    storageBucket: \"osrsmate-15e30.appspot.com\",\n    messagingSenderId: \"501351136975\",\n    appId: \"1:501351136975:web:edabd369de7962fca001ba\",\n    measurementId: \"G-F7J1QPMLK7\"\n  };\n\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore()\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider, useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n    rootReducer, \n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(firebase, firebaseConfig)\n    )\n  );\n\n  const rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n  }\n\n  const rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    presence: 'presence',\n    sessions: 'sessions'\n  }\n\n  function AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n    return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}